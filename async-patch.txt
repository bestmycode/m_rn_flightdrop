--- node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/storage/AsyncStorageModule.java	2018-02-11 20:16:06.000000000 +0100
+++ AsyncStorageModule.java	2018-02-11 20:16:27.000000000 +0100
@@ -13,6 +13,7 @@
 
 import android.database.Cursor;
 import android.database.sqlite.SQLiteStatement;
+import android.os.AsyncTask;
 
 import com.facebook.common.logging.FLog;
 import com.facebook.react.bridge.Arguments;
@@ -143,7 +144,7 @@
 
         callback.invoke(null, data);
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -188,7 +189,7 @@
             statement.clearBindings();
             statement.bindString(1, keyValueArray.getArray(idx).getString(0));
             statement.bindString(2, keyValueArray.getArray(idx).getString(1));
-            statement.execute();
+            statement.execute(AsyncTask.THREAD_POOL_EXECUTOR);
           }
           mReactDatabaseSupplier.get().setTransactionSuccessful();
         } catch (Exception e) {
@@ -210,7 +211,7 @@
           callback.invoke();
         }
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -261,7 +262,7 @@
           callback.invoke();
         }
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -324,7 +325,7 @@
           callback.invoke();
         }
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -347,7 +348,7 @@
           callback.invoke(AsyncStorageErrorUtil.getError(null, e.getMessage()));
         }
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -381,7 +382,7 @@
         }
         callback.invoke(null, data);
       }
-    }.execute();
+    }.execute(AsyncTask.THREAD_POOL_EXECUTOR);
   }
 
   /**
@@ -390,4 +391,4 @@
   private boolean ensureDatabase() {
     return !mShuttingDown && mReactDatabaseSupplier.ensureDatabase();
   }
-}
+}
\ No newline at end of file
